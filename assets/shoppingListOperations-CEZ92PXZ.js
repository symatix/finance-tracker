import{Y as n,a1 as c}from"./index-C5OJm0zW.js";class p{static async create(r){const e=new Date().toISOString(),{data:t,error:a}=await n.from("shopping_lists").insert({...r,created_at:e,updated_at:e}).select().single();if(a)throw a;return t}static async createWithItems(r,e){const t=await this.create(r);if(e.length>0){const a=new Date().toISOString(),s=e.map(o=>({list_id:t.id,name:o.name,quantity:o.quantity,estimated_price:o.estimated_price,created_at:a,updated_at:a})),{error:i}=await n.from("list_items").insert(s);if(i)throw i}return t}static async findAll(r){const{data:e,error:t}=await n.from("shopping_lists").select("*").eq("user_id",r).order("created_at",{ascending:!1});if(t)throw t;return e||[]}static async findById(r,e){const{data:t,error:a}=await n.from("shopping_lists").select("*").eq("id",r).eq("user_id",e).single();if(a){if(a.code==="PGRST116")return null;throw a}return t}static async findByCategory(r,e){const{data:t,error:a}=await n.from("shopping_lists").select("*").eq("user_id",r).eq("category_id",e).order("created_at",{ascending:!1});if(a)throw a;return t||[]}static async findByStatus(r,e){const{data:t,error:a}=await n.from("shopping_lists").select("*").eq("user_id",r).eq("status",e).order("created_at",{ascending:!1});if(a)throw a;return t||[]}static async update(r,e,t){const{data:a,error:s}=await n.from("shopping_lists").update({...e,updated_at:new Date().toISOString()}).eq("id",r).eq("user_id",t).select().single();if(s){if(s.code==="PGRST116")return null;throw s}return a}static async delete(r,e){const{error:t}=await n.from("shopping_lists").delete().eq("id",r).eq("user_id",e);if(t)throw t;return!0}static async findWithCategoryDetails(r,e="active"){let t=n.from("shopping_lists").select(`
				*,
				categories (
					name,
					type
				)
			`).eq("user_id",r);e!=="all"&&(t=t.eq("status",e));const{data:a,error:s}=await t.order("created_at",{ascending:!1});if(s)throw s;return(a||[]).map(i=>({...i,categoryName:i.categories?.name,categoryType:i.categories?.type}))}static async completeList(r,e,t,a){const s=await this.findById(r,t);if(!s)return null;const i=await this.update(r,{status:"completed"},t);if(!i)return null;const o=await c.create({amount:e,type:"Expense",category_id:s.category_id,subcategory:null,note:a||`Shopping list: ${s.name}`,date:new Date().toISOString().split("T")[0],user_id:t});return{list:i,transaction:o}}}export{p as S};
